name: 'Bitwarden Secrets Manager get by key'
description: 'Inject Bitwarden Secrets Manager secrets by key into $GITHUB_ENV'

inputs:
  access_token:
    description: Bitwarden Secrets Manager machine access token.
    required: true
  secrets:
    description: Multi line input of secrets to fetch by key name.
    required: true

runs:
  using: composite
  steps:
    - name: Check Runner OS
      if: ${{ runner.os != 'Linux' }}
      shell: bash
      run: |
        echo "::error title=Error::Supports Linux Only"
        exit 1

    - name: Install Bitwarden Secrets Manager cli
      shell: bash
      run: |
        echo 'Installing Bitwarden Secrets Manager cli...'
        wget -q https://github.com/bitwarden/sdk-sm/releases/download/bws-v1.0.0/bws-x86_64-unknown-linux-gnu-1.0.0.zip -O bws.zip && \
          unzip -qq bws.zip && \
          rm bws.zip && \
          sudo mv bws /usr/local/bin

    - name: Fetch & Set Secrets
      shell: bash
      run: |
          echo 'Fetching secrets from Bitwarden Secrets Manager...'
          BWS_SECRET_LIST=$(bws secret list)

          echo 'Setting secrets to $GITHUB_ENV...'
          while IFS= read -r line; do 
            if [[ ! -z "$line" ]]; then
              IFS='>' read -r key github_env_name <<< "$line"
              key="$(echo -e "${key}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
              github_env_name="$(echo -e "${github_env_name}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"
              github_env_name="${github_env_name:-$key}"
              echo "Setting '$key' to '$github_env_name'..."
              value=$(echo $BWS_SECRET_LIST | jq -r ". | map(select(.key == \"$key\").value)[0]")

              if (( $(grep -c . <<<"$value") > 1 )); then
                echo "::add-mask::$(echo "$value" | sed ':a;N;$!ba;s/%/%25/g' | sed ':a;N;$!ba;s/\r/%0D/g' | sed ':a;N;$!ba;s/\n/%0A/g')"
                echo "$github_env_name<<EOF" >> $GITHUB_ENV
                echo "$value" >> $GITHUB_ENV
                echo "EOF" >> $GITHUB_ENV
              else
                echo "::add-mask::$value"
                echo "$github_env_name=$value" >> $GITHUB_ENV
              fi
            fi
          done <<< $secrets
      env:  
        BWS_ACCESS_TOKEN: ${{ inputs.access_token }}
        secrets: ${{ inputs.secrets }}
      